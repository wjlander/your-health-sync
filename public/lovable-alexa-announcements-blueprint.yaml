blueprint:
  name: Lovable Alexa Announcements
  description: >
    Receives webhook notifications from the Lovable app and announces them
    on your selected Alexa device using the official Alexa Devices integration.
    
    This blueprint creates an automation that listens for webhook calls from
    your Lovable routine reminders and converts them to TTS announcements.
    
    Prerequisites:
    - Official "Alexa Devices" integration must be installed and configured
    - Your Amazon account must have MFA (Multi-Factor Authentication) enabled
    - Your Alexa devices should appear as notification entities in Home Assistant
    
    Setup Instructions:
    1. Import this blueprint
    2. Create a new automation using this blueprint
    3. Select your Alexa device from the dropdown
    4. Save the automation
    5. In your Lovable app settings, set your Home Assistant base URL
    6. Test the connection from the Lovable app
  
  domain: automation
  
  input:
    alexa_device:
      name: Alexa Device
      description: >
        Select the Alexa device that should announce the notifications.
        This should be a notification entity from the Alexa Devices integration
        (e.g., notify.echo_dot_kitchen_speak, notify.echo_show_bedroom_speak)
      selector:
        entity:
          filter:
            - domain: notify
              integration: alexa_devices
    
    announcement_prefix:
      name: Announcement Prefix (Optional)
      description: >
        Optional prefix to add before each announcement 
        (e.g., "Reminder:", "Alert:", or leave empty for no prefix)
      default: ""
      selector:
        text:
    
    volume_level:
      name: Volume Level (Optional)
      description: >
        Set the volume level for announcements (0.1 to 1.0).
        Leave empty to use current device volume.
      default: ""
      selector:
        number:
          min: 0.1
          max: 1.0
          step: 0.1
          mode: slider

# Fixed webhook_id for consistency with the app
trigger:
  - platform: webhook
    webhook_id: lovable_alexa_announce
    local_only: false

# Conditions to ensure we have the required data
condition:
  - condition: template
    value_template: "{{ trigger.json.message is defined and trigger.json.message | length > 0 }}"

action:
  # Optional: Set volume if specified
  - if:
      - condition: template
        value_template: "{{ volume_level | length > 0 }}"
    then:
      - service: media_player.volume_set
        target:
          entity_id: "{{ alexa_device.replace('notify.', 'media_player.').replace('_speak', '').replace('_announce', '') }}"
        data:
          volume_level: "{{ volume_level | float }}"
  
  # Send the announcement
  - service: notify.send_message
    target:
      entity_id: "{{ alexa_device }}"
    data:
      message: >
        {% if announcement_prefix | length > 0 %}
          {{ announcement_prefix }} {{ trigger.json.message }}
        {% else %}
          {{ trigger.json.message }}
        {% endif %}

# Log the announcement for debugging
  - service: system_log.write
    data:
      level: info
      logger: blueprints.lovable_alexa
      message: >
        Lovable announcement sent to {{ alexa_device }}: 
        "{{ trigger.json.message }}"

mode: queued
max: 10
max_exceeded: silent